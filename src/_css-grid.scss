.grid,
[class*="grid-auto-"] {
  display: grid;
  grid-gap: var(--grid-gap, 0);
}

.grid {
  --grid-cols: #{$grid-columns};
  grid-template-columns: repeat(var(--grid-cols), 1fr);

  > * {
    grid-column: span var(--span, #{$grid-columns}) / span
      var(--span, #{$grid-columns});
  }
}

.grid-auto-xs,
.grid-auto-sm,
.grid-auto-md,
.grid-auto-lg,
.grid-auto-xl {
  // auto-sized grid
  grid-template-columns: repeat(auto-fit, minmax(var(--col-min-width), 1fr));
}

.grid-auto-xs {
  --col-min-width: 8rem;
}

.grid-auto-sm {
  --col-min-width: 10rem;
}

.grid-auto-md {
  --col-min-width: 15rem;
}

.grid-auto-lg {
  --col-min-width: 20rem;
}

.grid-auto-xl {
  --col-min-width: 25rem;
}

.grid-auto-cols {
  // cols = same size
  grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
}

.grid-gap-xxxxs {
  --grid-gap: var(--space-xxxxs, 0.125rem);
}

.grid-gap-xxxs {
  --grid-gap: var(--space-xxxs, 0.25rem);
}

.grid-gap-xxs {
  --grid-gap: var(--space-xxs, 0.375rem);
}

.grid-gap-xs {
  --grid-gap: var(--space-xs, 0.5rem);
}

.grid-gap-sm {
  --grid-gap: var(--space-sm, 0.75rem);
}

.grid-gap-md {
  --grid-gap: var(--space-md, 1.25rem);
}

.grid-gap-lg {
  --grid-gap: var(--space-lg, 2rem);
}

.grid-gap-xl {
  --grid-gap: var(--space-xl, 3.25rem);
}

.grid-gap-xxl {
  --grid-gap: var(--space-xxl, 5.25rem);
}

.grid-gap-xxxl {
  --grid-gap: var(--space-xxxl, 8.5rem);
}

.grid-gap-xxxxl {
  --grid-gap: var(--space-xxxxl, 13.75rem);
}

@for $i from 1 through $grid-columns {
  .col-#{$i} {
    --span: #{$i};
  }

  .col-start-#{$i} {
    grid-column-start: #{$i};
  }

  .col-end-#{$i + 1} {
    grid-column-end: #{$i + 1};
  }
}

.col-start {
  grid-column-start: 1;
}

.col-end {
  grid-column-end: -1;
}

@mixin breakpoint($breakpoint) {
  @media (min-width: map-get($map: $breakpoints, $key: $breakpoint)) {
    @content;
  }
}

@include breakpoint(xs) {
  .grid-auto-xs-xsmall {
    --col-min-width: 8rem;
  }

  .grid-auto-sm-xsmall {
    --col-min-width: 10rem;
  }

  .grid-auto-md-xsmall {
    --col-min-width: 15rem;
  }

  .grid-auto-lg-xsmall {
    --col-min-width: 20rem;
  }

  .grid-auto-xl-xsmall {
    --col-min-width: 25rem;
  }

  .grid-auto-cols-xsmall {
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
  }

  @for $i from 1 through $grid-columns {
    .col-#{$i}-xsmall {
      --span: #{$i};
    }

    .col-start-#{$i}-xsmall {
      grid-column-start: #{$i};
    }

    .col-end-#{$i + 1}-xsmall {
      grid-column-end: #{$i + 1};
    }
  }

  .col-start-xsmall {
    grid-column-start: 1;
  }

  .col-end-xsmall {
    grid-column-end: -1;
  }

  .col-start-auto-xsmall {
    grid-column-start: auto;
  }

  .col-end-auto-xsmall {
    grid-column-end: auto;
  }
}

@include breakpoint(sm) {
  .grid-auto-xs-small {
    --col-min-width: 8rem;
  }

  .grid-auto-sm-small {
    --col-min-width: 10rem;
  }

  .grid-auto-md-small {
    --col-min-width: 15rem;
  }

  .grid-auto-lg-small {
    --col-min-width: 20rem;
  }

  .grid-auto-xl-small {
    --col-min-width: 25rem;
  }

  .grid-auto-cols-small {
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
  }

  @for $i from 1 through $grid-columns {
    .col-#{$i}-small {
      --span: #{$i};
    }

    .col-start-#{$i}-small {
      grid-column-start: #{$i};
    }

    .col-end-#{$i + 1}-small {
      grid-column-end: #{$i + 1};
    }
  }

  .col-start-small {
    grid-column-start: 1;
  }

  .col-end-small {
    grid-column-end: -1;
  }

  .col-start-auto-small {
    grid-column-start: auto;
  }

  .col-end-auto-small {
    grid-column-end: auto;
  }
}

@include breakpoint(md) {
  .grid-auto-xs-meduim {
    --col-min-width: 8rem;
  }

  .grid-auto-sm-meduim {
    --col-min-width: 10rem;
  }

  .grid-auto-md-meduim {
    --col-min-width: 15rem;
  }

  .grid-auto-lg-meduim {
    --col-min-width: 20rem;
  }

  .grid-auto-xl-meduim {
    --col-min-width: 25rem;
  }

  .grid-auto-cols-meduim {
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
  }

  @for $i from 1 through $grid-columns {
    .col-#{$i}-meduim {
      --span: #{$i};
    }

    .col-start-#{$i}-meduim {
      grid-column-start: #{$i};
    }

    .col-end-#{$i + 1}-meduim {
      grid-column-end: #{$i + 1};
    }
  }

  .col-start-meduim {
    grid-column-start: 1;
  }

  .col-end-meduim {
    grid-column-end: -1;
  }

  .col-start-auto-meduim {
    grid-column-start: auto;
  }

  .col-end-auto-meduim {
    grid-column-end: auto;
  }
}

@include breakpoint(lg) {
  .grid-auto-xs-large {
    --col-min-width: 8rem;
  }

  .grid-auto-sm-large {
    --col-min-width: 10rem;
  }

  .grid-auto-md-large {
    --col-min-width: 15rem;
  }

  .grid-auto-lg-large {
    --col-min-width: 20rem;
  }

  .grid-auto-xl-large {
    --col-min-width: 25rem;
  }

  .grid-auto-cols-large {
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
  }

  @for $i from 1 through $grid-columns {
    .col-#{$i}-large {
      --span: #{$i};
    }

    .col-start-#{$i}-large {
      grid-column-start: #{$i};
    }

    .col-end-#{$i + 1}-large {
      grid-column-end: #{$i + 1};
    }
  }

  .col-start-large {
    grid-column-start: 1;
  }

  .col-end-large {
    grid-column-end: -1;
  }

  .col-start-auto-large {
    grid-column-start: auto;
  }

  .col-end-auto-large {
    grid-column-end: auto;
  }
}

@include breakpoint(xl) {
  .grid-auto-xs-xlarge {
    --col-min-width: 8rem;
  }

  .grid-auto-sm-xlarge {
    --col-min-width: 10rem;
  }

  .grid-auto-md-xlarge {
    --col-min-width: 15rem;
  }

  .grid-auto-lg-xlarge {
    --col-min-width: 20rem;
  }

  .grid-auto-xl-xlarge {
    --col-min-width: 25rem;
  }

  .grid-auto-cols-xlarge {
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
  }

  @for $i from 1 through $grid-columns {
    .col-#{$i}-xlarge {
      --span: #{$i};
    }

    .col-start-#{$i}-xlarge {
      grid-column-start: #{$i};
    }

    .col-end-#{$i + 1}-xlarge {
      grid-column-end: #{$i + 1};
    }
  }

  .col-start-xlarge {
    grid-column-start: 1;
  }

  .col-end-xlarge {
    grid-column-end: -1;
  }

  .col-start-auto-xlarge {
    grid-column-start: auto;
  }

  .col-end-auto-xlarge {
    grid-column-end: auto;
  }
}
